/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as authenticationSignupIndexImport } from './routes/(authentication)/signup/index'
import { Route as authenticationLoginIndexImport } from './routes/(authentication)/login/index'

// Create Virtual Routes

const authenticationSignupIndexSignupLazyImport = createFileRoute(
  '/(authentication)/signup/index/Signup',
)()
const authenticationLoginIndexLoginLazyImport = createFileRoute(
  '/(authentication)/login/index/Login',
)()

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authenticationSignupIndexRoute = authenticationSignupIndexImport.update({
  path: '/signup/',
  getParentRoute: () => rootRoute,
} as any)

const authenticationLoginIndexRoute = authenticationLoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const authenticationSignupIndexSignupLazyRoute =
  authenticationSignupIndexSignupLazyImport
    .update({
      path: '/signup/index/Signup',
      getParentRoute: () => rootRoute,
    } as any)
    .lazy(() =>
      import('./routes/(authentication)/signup/index.Signup.lazy').then(
        (d) => d.Route,
      ),
    )

const authenticationLoginIndexLoginLazyRoute =
  authenticationLoginIndexLoginLazyImport
    .update({
      path: '/login/index/Login',
      getParentRoute: () => rootRoute,
    } as any)
    .lazy(() =>
      import('./routes/(authentication)/login/index.Login.lazy').then(
        (d) => d.Route,
      ),
    )

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(authentication)/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authenticationLoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/(authentication)/signup/': {
      id: '/signup/'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authenticationSignupIndexImport
      parentRoute: typeof rootRoute
    }
    '/(authentication)/login/index/Login': {
      id: '/login/index/Login'
      path: '/login/index/Login'
      fullPath: '/login/index/Login'
      preLoaderRoute: typeof authenticationLoginIndexLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/(authentication)/signup/index/Signup': {
      id: '/signup/index/Signup'
      path: '/signup/index/Signup'
      fullPath: '/signup/index/Signup'
      preLoaderRoute: typeof authenticationSignupIndexSignupLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof authenticationLoginIndexRoute
  '/signup': typeof authenticationSignupIndexRoute
  '/login/index/Login': typeof authenticationLoginIndexLoginLazyRoute
  '/signup/index/Signup': typeof authenticationSignupIndexSignupLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof authenticationLoginIndexRoute
  '/signup': typeof authenticationSignupIndexRoute
  '/login/index/Login': typeof authenticationLoginIndexLoginLazyRoute
  '/signup/index/Signup': typeof authenticationSignupIndexSignupLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login/': typeof authenticationLoginIndexRoute
  '/signup/': typeof authenticationSignupIndexRoute
  '/login/index/Login': typeof authenticationLoginIndexLoginLazyRoute
  '/signup/index/Signup': typeof authenticationSignupIndexSignupLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/signup'
    | '/login/index/Login'
    | '/signup/index/Signup'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/signup' | '/login/index/Login' | '/signup/index/Signup'
  id:
    | '__root__'
    | '/'
    | '/login/'
    | '/signup/'
    | '/login/index/Login'
    | '/signup/index/Signup'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  authenticationLoginIndexRoute: typeof authenticationLoginIndexRoute
  authenticationSignupIndexRoute: typeof authenticationSignupIndexRoute
  authenticationLoginIndexLoginLazyRoute: typeof authenticationLoginIndexLoginLazyRoute
  authenticationSignupIndexSignupLazyRoute: typeof authenticationSignupIndexSignupLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  authenticationLoginIndexRoute: authenticationLoginIndexRoute,
  authenticationSignupIndexRoute: authenticationSignupIndexRoute,
  authenticationLoginIndexLoginLazyRoute:
    authenticationLoginIndexLoginLazyRoute,
  authenticationSignupIndexSignupLazyRoute:
    authenticationSignupIndexSignupLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login/",
        "/signup/",
        "/login/index/Login",
        "/signup/index/Signup"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login/": {
      "filePath": "(authentication)/login/index.tsx"
    },
    "/signup/": {
      "filePath": "(authentication)/signup/index.tsx"
    },
    "/login/index/Login": {
      "filePath": "(authentication)/login/index.Login.lazy.tsx"
    },
    "/signup/index/Signup": {
      "filePath": "(authentication)/signup/index.Signup.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
