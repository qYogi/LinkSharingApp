/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PostsImport } from './routes/posts'
import { Route as LayoutImport } from './routes/_layout'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const authSigninLazyImport = createFileRoute('/(auth)/Signin')()
const authLoginLazyImport = createFileRoute('/(auth)/Login')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const PostsRoute = PostsImport.update({
  path: '/posts',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRoute = LayoutImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const authSigninLazyRoute = authSigninLazyImport
  .update({
    path: '/Signin',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/Signin.lazy').then((d) => d.Route))

const authLoginLazyRoute = authLoginLazyImport
  .update({
    path: '/Login',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/Login.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutImport
      parentRoute: typeof rootRoute
    }
    '/posts': {
      id: '/posts'
      path: '/posts'
      fullPath: '/posts'
      preLoaderRoute: typeof PostsImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/Login': {
      id: '/Login'
      path: '/Login'
      fullPath: '/Login'
      preLoaderRoute: typeof authLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/Signin': {
      id: '/Signin'
      path: '/Signin'
      fullPath: '/Signin'
      preLoaderRoute: typeof authSigninLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof LayoutRoute
  '/posts': typeof PostsRoute
  '/about': typeof AboutLazyRoute
  '/Login': typeof authLoginLazyRoute
  '/Signin': typeof authSigninLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof LayoutRoute
  '/posts': typeof PostsRoute
  '/about': typeof AboutLazyRoute
  '/Login': typeof authLoginLazyRoute
  '/Signin': typeof authSigninLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_layout': typeof LayoutRoute
  '/posts': typeof PostsRoute
  '/about': typeof AboutLazyRoute
  '/Login': typeof authLoginLazyRoute
  '/Signin': typeof authSigninLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/posts' | '/about' | '/Login' | '/Signin'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/posts' | '/about' | '/Login' | '/Signin'
  id: '__root__' | '/' | '/_layout' | '/posts' | '/about' | '/Login' | '/Signin'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  LayoutRoute: typeof LayoutRoute
  PostsRoute: typeof PostsRoute
  AboutLazyRoute: typeof AboutLazyRoute
  authLoginLazyRoute: typeof authLoginLazyRoute
  authSigninLazyRoute: typeof authSigninLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  LayoutRoute: LayoutRoute,
  PostsRoute: PostsRoute,
  AboutLazyRoute: AboutLazyRoute,
  authLoginLazyRoute: authLoginLazyRoute,
  authSigninLazyRoute: authSigninLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_layout",
        "/posts",
        "/about",
        "/Login",
        "/Signin"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_layout": {
      "filePath": "_layout.tsx"
    },
    "/posts": {
      "filePath": "posts.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/Login": {
      "filePath": "(auth)/Login.lazy.tsx"
    },
    "/Signin": {
      "filePath": "(auth)/Signin.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
